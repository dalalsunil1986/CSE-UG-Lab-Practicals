import java.util.*;

public class longestIncSub {
	//Find the longest increasing subsequence of a given sequence / array. 
	
	public int lis(final List<Integer> a) {
		int n = a.size();
		
		int T[]= new int[n];
		
		for (int i = 0; i < n; i++)
			T[i] = 1;
		
		for (int i = 1; i < n; i++){
			for (int j = 0; j < i; j++){
				
			}
		}
		
		for (int i = 0; i < n; i++){
        		System.out.print(T[i]+ " ");
        }
		System.out.println();
		
		return T[n -1];
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println(new longestIncSub().lis(Arrays.asList(0, 8, 4, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15)));
	}

}
