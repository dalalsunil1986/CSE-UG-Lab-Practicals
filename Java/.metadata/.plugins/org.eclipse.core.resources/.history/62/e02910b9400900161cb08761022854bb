import java.util.*;

public class bestTimeStocks {
/*Say you have an array for which the ith element is the price of a given stock on day i.
 * If you were only permitted to complete at most one transaction (ie, buy one and sell one
 *  share of the stock), design an algorithm to find the maximum profit.*/
	
	public int maxProfit(final List<Integer> a) {
		//Restriction. Must buy before selling
	    int cur = 0, max = 0;
	    for (int i = 1; i < a.size(); i++){
	    	cur = a.get(i)- a.get(i- 1) + Math.max(cur, 0);
	    	max = Math.max(max, cur);
	    	System.out.println("i: " + i + "cur: " + cur + " max: " + max);
	    }
	    
	    return max;
	}
	
	public static void main(String[] args) {
		System.out.println(new bestTimeStocks().maxProfit(Arrays.asList(5, 10, 12, -10, 0, 23, 20)));
	}
}
