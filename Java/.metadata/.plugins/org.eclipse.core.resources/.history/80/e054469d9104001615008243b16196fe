import java.util.*;

public class coinsInLine {
	
	/*There are N coins (Assume N is even) in a line. Two players take turns to take a coin from one of the 
	 * ends of the line until there are no more coins left. The player with the larger amount of money wins.
	 *  Assume that you go first. Compute the maximum amount of money you can win.*/
	
	
	private int maxCoinUtil(int low, int high, int sum, final List<Integer> a){
		if (low == high)
			return a.get(low);
		if (low > high)
			return sum;
		
		return Math.max(
					Math.max(maxCoinUtil(low + 2, high, sum + a.get(low), a),
							maxCoinUtil(low + 1, high -1, sum, a)),
					Math.max(maxCoinUtil(low + 1, high -1, sum + a.get(high), a),
							maxCoinUtil(low, high -2, sum, a)));
	}
	
	public int maxcoinRecursive(List<Integer> list) {
		
		int sum = 0;
		return maxCoinUtil(0, list.size() -1, sum, list);
	}
	
	public static void main(String[] args) {
		System.out.println(new coinsInLine().maxcoinRecursive(Arrays.asList(1,2,100,4)));
	}

}
