import java.io.BufferedReader;
import java.io.InputStreamReader;

public class possPass {
	
	public static int longestCommonSubsequence(String a, String b){
		int m = a.length(), n = b.length();
		
		int T[][] = new int[m +1][n +1];
		for (int i = 1; i <= m; i++){
			for (int j = 1; j <= n; j++){
				if (a.charAt(i -1) == b.charAt(j -1))
					T[i][j] = T[i -1][j -1] +1;
				else
					T[i][j] = Math.max(T[i -1][j], T[i][j -1]);
			}
		}
		
		for (int i = 0; i <= m; i++){
			for (int j = 0; j <= n; j++)
				System.out.print(T[i][j] +" ");
			System.out.println();
		}
		
		return T[m][n];
	}
	
	
    public static String possiblePass(String S, String P){
        //Find if the password is possible
    	
    	
    	
    	
    	return "Possible";
    }


    public static void main(String args[] ) throws Exception {
    	
    	System.out.println(longestCommonSubsequence("abacd", "acdef"));
    	
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String line = br.readLine();
        int testcases = Integer.parseInt(line);
        
        while (testcases-- > 0){
        	String a[] = br.readLine().split(" ");
        	String S = a[0], P = a[1]; 
        	
            System.out.println(possiblePass(S, P));
        }

    }
}
